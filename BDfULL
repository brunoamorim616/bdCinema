-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema bdcinema
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bdcinema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bdcinema` DEFAULT CHARACTER SET latin1 ;
USE `bdcinema` ;

-- -----------------------------------------------------
-- Table `bdcinema`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdcinema`.`cliente` (
  `idCliente` INT(11) NOT NULL AUTO_INCREMENT,
  `nomeCliente` VARCHAR(50) NOT NULL,
  `dataNascimento` DATE NULL DEFAULT NULL,
  `cep` INT(8) NOT NULL,
  `endereco` VARCHAR(150) NOT NULL,
  `cpf` INT(11) NOT NULL,
  `senha` VARCHAR(20) NOT NULL,
  `usuario` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

INSERT INTO cliente(nomeCliente, dataNascimento, cep, endereco, cpf, senha, usuario)
VALUES	("Bruno Amorim","2001-01-03",88350100,"Rua João Bauer",909090909,"senha123","usuario321");

DELIMITER $$
CREATE PROCEDURE cadastro_Cliente(IN nomeCliente VARCHAR(50), IN dataNascimento DATE, IN cep INT(8), IN endereco VARCHAR(150), IN cpf INT(11), IN senha VARCHAR(20), IN usuario VARCHAR(20))
BEGIN
    INSERT INTO cliente(nomeCliente, dataNascimento, cep, endereco, cpf, senha, usuario)
	VALUES	(nomeCliente, dataNascimento, cep, endereco, cpf, senha, usuario);
END $$
DELIMITER ;

call cadastro_Cliente("Eduardo Tinti","2002-02-04",84350100,"Rua Bauer",909089899,"senha321","usuario123");

select*from cliente;


-- -----------------------------------------------------
-- Table `bdcinema`.`funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdcinema`.`funcionario` (
  `idFuncionario` INT(11) NOT NULL AUTO_INCREMENT,
  `nomeFuncionário` VARCHAR(50) NOT NULL,
  `dataNascimento` DATE NULL DEFAULT NULL,
  `cep` INT(8) NOT NULL,
  `endereco` VARCHAR(150) NOT NULL,
  `cpf` INT(11) NOT NULL,
  `senha` VARCHAR(20) NOT NULL,
  `usuario` VARCHAR(20) NOT NULL,
  `tipo` TINYINT(1) NULL DEFAULT NULL,
  PRIMARY KEY (`idFuncionario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

INSERT INTO funcionario(nomeFuncionário, dataNascimento, cep, endereco, cpf, senha, usuario, tipo)
VALUES	("Bruno Amorim","2001-01-03",88350100,"Rua João Bauer",909090909,"senha123","usuario321", True);

DELIMITER $$
CREATE PROCEDURE cadastro_funcionario(IN nomeFuncionário VARCHAR(50), IN dataNascimento DATE, IN cep INT(8), IN endereco VARCHAR(150), IN cpf INT(11), IN senha VARCHAR(20), IN usuario VARCHAR(20), IN tipo TINYINT(1))
BEGIN
    INSERT INTO funcionario(nomeFuncionário, dataNascimento, cep, endereco, cpf, senha, usuario, tipo)
    VALUES	(nomeFuncionário, dataNascimento, cep, endereco, cpf, senha, usuario, tipo);
END $$
DELIMITER ;

call cadastro_funcionario("Eduardo a","2002-02-04",84350100,"Rua Bauer",909089899,"senha321","usuario123", True);

select*from funcionario;
-- -----------------------------------------------------
-- Table `bdcinema`.`preco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdcinema`.`preco` (
  `idpreco` INT NOT NULL AUTO_INCREMENT,
  `preco` FLOAT NOT NULL,
  `tipoEntrada` TINYINT NOT NULL,
  PRIMARY KEY (`idpreco`))
ENGINE = InnoDB;

INSERT INTO preco(preco, tipoEntrada)
VALUES	(20.00, False),
		(16.00, True);
SELECT * FROM preco;

-- -----------------------------------------------------
-- Table `bdcinema`.`filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdcinema`.`filme` (
  `idFilmes` INT NOT NULL AUTO_INCREMENT,
  `nomeFilmes` VARCHAR(55) NOT NULL,
  `dataDeLancamento` DATE NOT NULL,
  `3D` TINYINT NOT NULL,
  PRIMARY KEY (`idFilmes`))
ENGINE = InnoDB;

INSERT INTO filme(nomeFilmes, dataDelancamento, 3D)
VALUES 	("O RETARDADO: Klas", "2012-02-24", true),
		("O RETARDADO 2: Ismar", "2014-02-24", false);
        
DELIMITER $$
CREATE PROCEDURE assentos_livre_por_sessao(IN nomeFilme VARCHAR(55))
BEGIN
    SELECT f.nomeFilmes AS nome_do_filme
    FROM sessao AS s
    INNER JOIN preco AS p ON s.preco_idpreco = p.idpreco
	INNER JOIN filme AS f ON s.filme_idFilmes = f.idFilmes;
END $$
DELIMITER ;

SELECT s.horaInicio AS horário_de_Início, s.horaTermino AS horário_de_Término, p.preco AS Preco, f.nomeFilmes AS nome_do_filmes 
    FROM sessao AS s
    INNER JOIN preco AS p ON s.preco_idpreco = p.idpreco
	INNER JOIN filme AS f ON s.filme_idFilmes = f.idFilmes;

call cadastro_filme("O Grande Lançe","2002-02-04", False);
select * from filme;


-- -----------------------------------------------------
-- Table `bdcinema`.`sessao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdcinema`.`sessao` (
  `idsessao` INT NOT NULL AUTO_INCREMENT,
  `horaInicio` DATETIME NOT NULL,
  `horaTermino` DATETIME NOT NULL,
  `preco_idpreco` INT NOT NULL,
  `filme_idFilmes` INT NOT NULL,
  PRIMARY KEY (`idsessao`),
  CONSTRAINT `fk_sessao_preco1`
    FOREIGN KEY (`preco_idpreco`)
    REFERENCES `bdcinema`.`preco` (`idpreco`),
  CONSTRAINT `fk_sessao_filme1`
    FOREIGN KEY (`filme_idFilmes`)
    REFERENCES `bdcinema`.`filme` (`idFilmes`))
ENGINE = InnoDB;

INSERT INTO sessao(horaInicio, horaTermino, preco_idpreco, filme_idFilmes)
VALUES	('2012-06-18 10:34:09', '2012-06-18 10:34:09', 1, 1);

SELECT * FROM sessao;

drop view viasualizar_sessoes;

create view viasualizar_sessoes AS
	SELECT s.horaInicio AS horário_de_Início, s.horaTermino AS horário_de_Término, p.preco AS Preco, f.nomeFilmes AS nome_do_filmes 
    FROM sessao AS s
    INNER JOIN preco AS p ON s.preco_idpreco = p.idpreco
	INNER JOIN filme AS f ON s.filme_idFilmes = f.idFilmes;
    
SELECT * FROM viasualizar_sessoes;

-- -----------------------------------------------------
-- Table `bdcinema`.`sala`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdcinema`.`sala` (
  `idSala` INT NOT NULL AUTO_INCREMENT,
  `nomeSala` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idSala`))
ENGINE = InnoDB;

INSERT INTO sala(nomeSala)
VALUES	("Primavera"),
		("Verão");


SELECT s.horaInicio AS horário_de_Início, s.horaTermino AS horário_de_Término, p.preco AS Preco, f.nomeFilmes AS nome_do_filmes 
    FROM sessao AS s
    INNER JOIN preco AS p ON s.preco_idpreco = p.idpreco
	INNER JOIN filme AS f ON s.filme_idFilmes = f.idFilmes;


-- -----------------------------------------------------
-- Table `bdcinema`.`assento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdcinema`.`assento` (
  `idassento` INT NOT NULL AUTO_INCREMENT,
  `ocupado` TINYINT NOT NULL,
  PRIMARY KEY (`idassento`))
ENGINE = InnoDB;

INSERT INTO assento(idassento, ocupado)
VALUES	(1, false),
		(2, true),
        (3, true),
        (4, true);

-- -----------------------------------------------------
-- Table `bdcinema`.`cliente_tem_sessao_assento_em_sala`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdcinema`.`cliente_tem_sessao_assento_em_sala` (
  `sessao_idsessao` INT NOT NULL,
  `assento_idassento` INT NOT NULL,
  `sala_idSala` INT NOT NULL,
  `cliente_idCliente` INT(11) NOT NULL,
  CONSTRAINT `fk_sessao_has_assento_sessao1`
    FOREIGN KEY (`sessao_idsessao`)
    REFERENCES `bdcinema`.`sessao` (`idsessao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sessao_has_assento_assento1`
    FOREIGN KEY (`assento_idassento`)
    REFERENCES `bdcinema`.`assento` (`idassento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sessao_has_assento_sala1`
    FOREIGN KEY (`sala_idSala`)
    REFERENCES `bdcinema`.`sala` (`idSala`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sessao_has_assento_cliente1`
    FOREIGN KEY (`cliente_idCliente`)
    REFERENCES `bdcinema`.`cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO cliente_tem_sessao_assento_em_sala(sessao_idsessao, assento_idassento, sala_idSala, cliente_idCliente)
VALUES (4, 1, 1,1);

CREATE VIEW cadastro_usuario
AS Select * from Cliente;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
